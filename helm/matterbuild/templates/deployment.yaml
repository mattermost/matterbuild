apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matterbuild.fullname" . }}
  labels:
    {{- include "matterbuild.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "matterbuild.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "matterbuild.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "matterbuild.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: cert-keys
        secret:
          defaultMode: 256
          secretName: cert-keys
      - configMap:
          defaultMode: 420
          items:
          - key: config.json
            path: config.json
          name: matterbuild-config
        name: config
      containers:
        - name: {{ .Chart.Name }}
          command:
            - matterbuild
            - -ssl-verify=$(SSL_VERIFY)
            - -ca-cert=$(CA_CERT)
          env:
          - name: SSL_VERIFY
            valueFrom:
              configMapKeyRef:
                key: SSL_VERIFY
                name: matterbuild-envvars
          - name: CA_CERT
            valueFrom:
              configMapKeyRef:
                key: CA_CERT
                name: matterbuild-envvars
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/ssl/ca.crt
            name: cert-keys
            readOnly: true
            subPath: ca.crt
          - mountPath: /app/ssh/id_rsa
            name: cert-keys
            readOnly: true
            subPath: id_rsa
          - mountPath: /app/config/
            name: config
            readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
